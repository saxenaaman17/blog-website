[{"title":"Promise.all v Promise.allSettled","categories":["programming"],"href":"/my-fifth-post","content":" Promiseall Promiseall takes an array of promises as input and it returns a single Promise And that single promise resolves when all the promises in the array have resolved or it rejects immediately upon any of the promises rejecting If all the promises in the array resolve successfully Promiseall resolves with an array containing the resolved values of each promise maintaining the order of the original array If any of the promises in the array rejects Promiseall immediately rejects with the reason of the first promise that rejects and further promise resolutions or rejections are ignored Use cases for Promiseall When you want to make multiple API requests for different data needed to render a dashboard You need all the data to be successfully fetched before rendering the complete dashboard PromiseallSettled PromiseallSettled also takes an an array of promises as input and returns a single Promise that settles neither resolves nor rejects when all the promises in the array have settled either resolved or rejected It returns an array of objects where each object is the result for each promise in the array This object has a status property that indicates whether the promise was fulfilled or rejected If promise was fulfilled this object will have a value property and if it was rejected object will contain reason property to tell us why it was rejected Use cases for PromiseallSettled When you want to Upload multiple files to a server in multiple api calls and needing information about each file upload status whether successful or failed It allows you to proceed with further actions or error handling based on individual upload outcomes PromiseallSettled Example const fetchDataFromSource url return new Promiseresolve reject Simulating fetching data with random success or failure with 70 chance of success const isSuccess Mathrandom if isSuccess resolveData from url else rejectnew ErrorFailed to fetch data from url Mathrandom 2000 Array of promises representing fetching data from different sources const promises fetchDataFromSourcehttpsapiexamplecomdata1 fetchDataFromSourcehttpsapiexamplecomdata2 fetchDataFromSourcehttpsapiexamplecomdata3 fetchDataFromSourcehttpsapiexamplecomdata4 PromiseallSettledpromises thenresults resultsforEachresult index if resultstatus fulfilled consolelogPromise index 1 was fulfilled with value resultvalue else consolelogPromise index 1 was rejected with reason resultreasonmessage catcherror consoleerrorError occurred error Note catch block in PromiseallSettled will not be executed because catch block is specifically designed to handle rejected promises but PromiseallSettled doesnt reject when a promise inside an array of promises fails It considers both fulfilled and rejected promises as settled and includes their results in the array it returns in then block Note Promiseall implementation is very identical to PromiseallSettled"}]